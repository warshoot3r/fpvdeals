name: "Daily run and send messages via Telegram"
on:
  schedule:
    - cron: '0 */2 * * *' # Schedule to run 2 hour
  workflow_dispatch: 

jobs:
  # pull-and-test:
  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       # Select the images from DockerHub here to test
  #       image_variant:
  #         - jammyboi/fpvdeals:master
  #     fail-fast: false
      
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3

  #     - name: Docker pull image
  #       run: |
  #           docker pull "${{ matrix.image_variant }}"

  #     - name: Make Credentials.py
  #       run: |
  #         printf 'api_token = "${{ secrets.api_token}}"\nchat_id="${{secrets.DEVELOPMENT_GROUP_CHAT_ID}}"\nmessage_id="${{secrets.PRODUCTION_MESSAGE_ID}}"\n' > /home/runner/work/fpvdeals/fpvdeals/credentials.py



  #     - name: Download artifact
  #       uses: dawidd6/action-download-artifact@v2
  #       continue-on-error: True
  #       id: download_db_step
  #       with:
  #         name: cargiantdbfile
  #         repo: ${{ github.repository }}
  #         path: /home/runner/work/fpvdeals/fpvdeals/

  #     - name: create empty db file as no db file provided from artifact
  #       if: steps.download_db_step.outcome == 'failure'
  #       run: |
  #        touch /home/runner/work/fpvdeals/fpvdeals/UMTDB.db

  #     - name: Run Tests
  #       run: |
  #         docker run --rm -v /home/runner/work/fpvdeals/fpvdeals/credentials.py:/app/credentials.py -v /home/runner/work/fpvdeals/fpvdeals/UMTDB.db:/app/UMTDB.db  ${{ matrix.image_variant }} chatbot_autorun_onetime.py

  #     - name: Save db data as an artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #           name: cargiantdbfile
  #           path: /home/runner/work/fpvdeals/fpvdeals/UMTDB.db
  # background_data:
  #             runs-on: ubuntu-latest
  #             needs: pull-and-test
  #             strategy:
  #               matrix:
  #                 image_variant:
  #                   - jammyboi/fpvdeals:master
  #               fail-fast: false
  #             steps:
  #                 - name: Wait for 1 minutes
  #                   run: sleep 60  # To prevent over pulling docker
  #                 - name: Checkout Repository
  #                   uses: actions/checkout@v3
      
  #                 - name: Docker pull image
  #                   run: |
  #                       docker pull "${{ matrix.image_variant }}"
  #                 # - name: Download artifact This musn't be used as it will cause the db to be reverted
  #                 #   uses: dawidd6/action-download-artiffact@v2
  #                 #   id: download_db_step
  #                 #   continue-on-error: True
  #                 #   with:
  #                 #     name: cargiantdbfile
  #                 #     repo: ${{ github.repository }}
  #                 #     path: /home/runner/work/fpvdeals/fpvdeals/
      
  #                 # - name: create empty db file as no db file provided from artifact
  #                 #   if: steps.download_db_step.outcome == 'failure'
  #                 #   run: |
  #                 #     touch /home/runner/work/fpvdeals/fpvdeals/UMTDB.db
  #                 - name: Download Artifacts
  #                   uses: actions/download-artifact@v2
  #                   id: download_db_step
  #                   with:
  #                     name: cargiantdbfile
  #                     path: /home/runner/work/fpvdeals/fpvdeals

  #                 - name: Run Price scraping
  #                   if: steps.download_db_step.outcome == 'success'
  #                   run: |
  #                     docker run --rm -v /home/runner/work/fpvdeals/fpvdeals/credentials.py:/app/credentials.py -v /home/runner/work/fpvdeals/fpvdeals/UMTDB.db:/app/UMTDB.db  ${{ matrix.image_variant }} calculate_prices_on_db.py
          
  #                 - name: Save db data as an artifact
  #                   uses: actions/upload-artifact@v3
  #                   with:
  #                       name: cargiantdbfile
  #                       path: /home/runner/work/fpvdeals/fpvdeals/UMTDB.db
  scheduled_daily_report:
      runs-on: ubuntu-latest
      strategy:
        fail-fast: false
        matrix:
          image_variant:
            - jammyboi/fpvdeals:master
      steps:
        - name: Wait for 1 minutes
          run: sleep 60  # To prevent over pulling docker
        - name: Checkout Repository
          uses: actions/checkout@v3
  
        - name: Docker pull image
          run: |
              docker pull "${{ matrix.image_variant }}"
  
        - name: Make Credentials.py
          run: |
            printf 'api = "${{ secrets.api_token}}"\nchat_id="${{secrets.telegram_group}}"\nmessage_id="${{secrets.DAILY_REPORT_MESSAGE_ID}}"\n' > /home/runner/work/fpvdeals/fpvdeals/credentials.py

        - name: Download artifact This musn't be used as it will cause the db to be reverted
          uses: dawidd6/action-download-artifact@v2
          id: download_db_step
          continue-on-error: True
          with:
            name: UMTDBdata
            repo: ${{ github.repository }}
            path: /home/runner/work/fpvdeals/fpvdeals/

        - name: Create empty DB file as no DB
          if: steps.download_db_step.outcome == 'failure'
          run: touch /home/runner/work/fpvdeals/fpvdeals/UMTDB.db

        - name: Run Price scraping
          run: |
              docker run --rm -v /home/runner/work/fpvdeals/fpvdeals/credentials.py:/app/credentials.py -v /home/runner/work/fpvdeals/fpvdeals/UMTDB.db:/app/UMTDB.db  ${{ matrix.image_variant }} auto.py
        - name: Save db data as an artifact
          uses: actions/upload-artifact@v3
          with:
            name: UMTDBdata
            path: /home/runner/work/fpvdeals/fpvdeals/UMTDB.db